# Default config for sway

#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
set $editor emacsclient -c
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.

# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi --show=drun --allow-images

set $uifont "Ubuntu 14"
set $highlight #3daee9
set $prompt #18b218
# set $menu bemenu-run --fn $uifont -b -p "â–¶" --tf "$prompt" --hf "$highlight" --sf "$highlight" --scf "$highlight" | xargs swaymsg exec

### Output configuration
#
# Default wallpaper (more resolutions are available in /run/current-system/sw/share/backgrounds/sway/)
set $laptop-display eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

output $laptop-display position 1920,0 
output HDMI-A-1 position 0,0


# # Galway office
# output eDP-1 position 540 1080
# output DP-4  position 0 0
# output DP-3  position 1920 0

# output * bg /home/josh/bitmap.png fill
output * bg "#1f1f1f" solid_color

# output * bg /run/current-system/sw/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill

# Enable/disable laptop screen when it closes/opens
exec_always ~/.config/sway/clam-shell-display.sh $laptop-display
exec_always ~/.config/sway/clam-shell-display.sh $laptop-display

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:

exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dps off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

for_window [class=".*"] inhibit_idle fullscreen
for_window [app_id=".*"] inhibit_idle fullscreen

#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#

# Lenovo Extreme Gen 2
input "2:7:SynPS/2_Synaptics_TouchPad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}


#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Basic tools 
    bindsym $mod+Return exec $editor
    bindsym $mod+Tab exec $term
    bindsym $mod+o exec obsidian
    bindsym $mod+i exec "xdg-open https://ponelat.com"
    bindsym $mod+s exec "slack"
    bindsym $mod+Ctrl+Shift+l exec "swaylock -f -c 111111"


    # Kill focused window
    bindsym $mod+q kill

    bindsym $mod+p exec grim -g "$(slurp)" - | wl-copy

    # Start your launcher
    bindsym alt+space exec $menu

    # Manually disable the extra monitor
    bindsym $mod+Shift+o output HDMI-A-1 disable
    bindsym $mod+Shift+p output HDMI-A-1 enable

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # bindsym $mod+Shift+t focus floating
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1;  workspace 1
    bindsym $mod+Shift+2 move container to workspace 2;  workspace 2
    bindsym $mod+Shift+3 move container to workspace 3;  workspace 3
    bindsym $mod+Shift+4 move container to workspace 4;  workspace 4
    bindsym $mod+Shift+5 move container to workspace 5;  workspace 5
    bindsym $mod+Shift+6 move container to workspace 6;  workspace 6
    bindsym $mod+Shift+7 move container to workspace 7;  workspace 7
    bindsym $mod+Shift+8 move container to workspace 8;  workspace 8
    bindsym $mod+Shift+9 move container to workspace 9;  workspace 9
    bindsym $mod+Shift+0 move container to workspace 10; workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym $mod+Ctrl+j workspace next_on_output
    bindsym $mod+Ctrl+k workspace prev_on_output

# Sound and lights
## Requires `brightnessctl`
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pamixer -i 5 #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pamixer -d 5 #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pamixer -t  # Toggle mute sound
# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# ~/.config/sway/config.d/zoom.us.conf
# 
# Zoom Meeting App
# 
# Default for all windows is non-floating.
# 
# For pop up notification windows that don't use notifications api
for_window [app_id="zoom" title="^zoom$"] border none, floating enable
# For specific Zoom windows
for_window [app_id="zoom" title="^(Zoom|About)$"] border pixel, floating enable
for_window [app_id="zoom" title="Settings"] floating enable, floating_minimum_size 960 x 700
# Open Zoom Meeting windows on a new workspace (a bit hacky)
for_window [app_id="zoom" title="Zoom Meeting(.*)?"] workspace next_on_output --create, move container to workspace current, floating disable, inhibit_idle open

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking
    # bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+f floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Shift+t focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+u move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+u scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # With some extra oomph.
    bindsym Shift+$left resize shrink width 50px
    bindsym Shift+$down resize grow height 50px
    bindsym Shift+$up resize shrink height 50px
    bindsym Shift+$right resize grow width 50px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [window_role="About"] floating enable
for_window [class="xdg-desktop-portal-kde"] floating enable
for_window [class="ksysguard"] floating enable
for_window [class="ksysguard"] sticky enable
#for_window [app_id="mpv"] layout tabbed
for_window [class="Wine"] floating enable
for_window [app_id="lutris"] floating enable

#
# Titlebars
#
default_border pixel
default_floating_border pixel
hide_edge_borders smart

#
# Colors #93cee9
#
# class                     border  backgr. text  indicator child_border
    client.focused          #4c7899 #285577 #ffffff $highlight $highlight
    client.focused_inactive #333333 #5f676a #ffffff #484e50 #5f676a
    client.unfocused        #333333 #222222 #888888 #292d2e #222222
    client.urgent           #2f343a #900000 #ffffff #900000 #900000 


gaps top 0
gaps bottom 6
gaps left 4
gaps right 4
gaps inner 10

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %l:%M'; do sleep 1; done

#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

# Start the keyring
exec /run/current-system/sw/libexec/polkit-gnome-authentication-agent-1
exec eval $(gnome-keyring-daemon --start)
exec export SSH_AUTH_SOCK

exec dbus-sway-environment
exec configure-gtk


include /etc/sway/config.d/*
